package com.dalolorn.croztest.jokemanager

import org.springframework.data.domain.Pageable
import org.springframework.data.jpa.repository.Query
import org.springframework.data.repository.PagingAndSortingRepository

/**
 * Autogenerated segment of the JPA joke repository.
 */
interface JokeRepository extends PagingAndSortingRepository<Joke, Integer>, JokeRepositoryCustom {
    /**
     * Gets all jokes for a given joke category.
     * @param category The ID of the joke category.
     * @return List of all matching jokes.
     */
    List<Joke> findByCategory(Integer category)

    /**
     * Gets a subset of all jokes for a given joke category.
     * @param category The ID of the joke category.
     * @param pageable Specifies the start and end points of the subset.
     * @return List of all matching jokes.
     */
    List<Joke> findByCategory(Integer category, Pageable pageable)

    /**
     * Gets all jokes ordered by the difference of their likes and dislikes, in descending order.
     * @return Sorted list of all matching jokes.
     */
    @Query('SELECT j FROM Joke j ORDER BY j.likes - j.dislikes DESC')
    List<Joke> findAllOrderByNetLikes()

    /**
     * Gets a subset of all jokes ordered by the difference of their likes and dislikes, in descending order.
     * @param pageable Specifies the start and end points of the subset.
     * @return Sorted list of all matching jokes.
     */
    @Query('SELECT j FROM Joke j ORDER BY j.likes - j.dislikes DESC')
    List<Joke> findAllOrderByNetLikes(Pageable pageable)
}